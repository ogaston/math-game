{"version":3,"sources":["utils/math.js","redux/reducers/index.jsx","redux/store.jsx","redux/constants/index.jsx","redux/actions/index.jsx","components/Button.jsx","components/Input.jsx","utils/storage.js","containers/Start.jsx","components/Beginning.jsx","constant/colors.js","components/AnswerModal.jsx","components/Quiz.jsx","components/Done.jsx","components/Timmer.jsx","components/Lifes.jsx","components/Points.jsx","components/TableScore.jsx","containers/MathQuiz.jsx","components/Footer.jsx","App.js","redux/index.jsx","serviceWorker.js","index.js"],"names":["PRIMES_NUMBERS","getRandomSymbol","symbols","max","length","Math","round","random","evaluate","symbol","prev","ram","floor","commonMultiple","filter","n","ramNum","getRandomNumber","range","toFixed","generateProblem","points","lv","parseInt","prevNum","problem","i","anotherNumber","getAnotherNumber","concat","compare","expression","value","solve","Number","result","eval","toString","includes","__webpack_exports__","initialState","lifes","seconds","level","isFinished","isStarted","compose","applyMiddleware","thunk","createStore","state","arguments","undefined","action","type","newPonts","payload","Object","assign","newCorrectState","newLive","stateGame","bol","dispatch","Button","_ref","children","isClicked","react_default","a","createElement","className","onClick","Input","text","onInputChange","placeholder","onChange","Persistent","set","key","localStorage","setItem","get","getItem","Session","sessionStorage","Start","player","setNameOfPlayer","event","_this","setState","target","clicked","props","startPressed","this","components_Button","React","Component","Beginning","msg","handleCount","prevState","_this2","intervalRef","setInterval","nextProps","nextState","clearInterval","isComplete","Colors","yellow","lightBlue","darkGray","midGray","lightGray","darkBg","red","green","Message","_ref2","style","color","AnswerModal","modalType","class","el","Quiz","_isMounted","answer","modal","modalShowing","streaks","earnLife","onEarnLife","showModal","correctAnswer","onCorretAnswer","nextProblem","wrongAnswer","onWrongAnswer","MathHelper","setTimeout","getProblem","answerInput","focus","evaluateProblem","keyingUp","ev","val","match","components_AnswerModal","newProblem","onEndGame","fontSize","ref","input","min","onKeyUp","fontFamily","cursor","margin","height","border","fontWeight","Done","divider","buttonRetry","otherButton","poinstStyle","retryGame","onReStartGame","Timmer","classCallCheck","possibleConstructorReturn","getPrototypeOf","call","_secondsIntervalRef","_this3","setTimeChanged","defaultProps","Lifes","hearts","push","marginLeft","Points","container","display","justifyContent","flex","title","timeCol","padding","sectionContainer","textAlign","RowScore","name","moment","Date","time","fromNow","TableScore","playerName","scoreTable","JSON","parse","now","sort","b","slice","stringify","map","MathQuiz","isBeginningDone","lastPoints","onRetryGame","completeBeginning","components_Done","components_Timmer","components_Lifes","components_Quiz","components_Beginning","Footer","href","rel","App","gameStart","onStartGame","src_containers_MathQuiz","containers_Start","connect","s","isLocalhost","Boolean","window","location","hostname","registerValidSW","swUrl","config","navigator","serviceWorker","register","then","registration","onupdatefound","installingWorker","installing","onstatechange","controller","console","log","onUpdate","onSuccess","catch","error","ReactDOM","render","es","store","src_App_0","document","getElementById","URL","process","origin","addEventListener","fetch","response","contentType","headers","status","indexOf","ready","unregister","reload","checkValidServiceWorker"],"mappings":"kIAAO,IAAMA,eAAiB,CAAC,EAAG,EAAG,EAAG,EAAG,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,IAMrHC,gBAAkB,WACpB,IAAMC,EAAU,CAAC,IAAK,IAAK,IAAK,IAAK,KAEjCC,EAAMD,EAAQE,OAAS,EAE3B,OAAOF,EADMG,KAAKC,MAAMD,KAAKE,WAAaJ,EAAM,GAAQ,KAW/CK,SAAW,SAACC,EAAQC,GAG7B,GAAgB,MAAXD,EACD,OAAO,WACH,IAAME,EAAMN,KAAKO,MAAM,EAAAP,KAAKE,SAAsB,GAC5CM,EAAiBb,eAAec,OAAO,SAAAC,GAAC,OAAKL,EAAOK,IAAM,GAAMJ,EAAMI,IAG5E,OAAQF,EAFMR,KAAKO,MAAMP,KAAKE,UAAYM,EAAeT,OAAS,MAEjC,GAMzC,GAAe,MAAXK,EAAgB,CAEhB,IAAIO,EAAS,EAcb,OAZIN,EAAO,KACPM,EAAS,IAGTN,EAAO,IAAMA,EAAO,KACpBM,EAAS,GAGTN,EAAO,KACPM,EAAS,GAGN,kBAAMC,gBAAgBD,IAIjC,OAAO,kBAAMC,gBAAgB,MAQ3BA,gBAAkB,SAAAC,GACpB,OAAQb,KAAKE,UAAYW,GAAS,MAAMC,WAStCC,gBAAkB,SAACC,GAMrB,IAJA,IAAMC,EAAKC,SAAWF,EAAO,IAAM,EAAK,GACpCG,EAAWP,kBACXQ,EAAUD,EAELE,EAAE,EAAGA,EAAIJ,EAAII,IAAK,CACvB,IAAIjB,EAASR,kBAET0B,EADmBnB,SAASC,EAAQe,EACpBI,IAAsB,EAC1CH,GAAO,IAAAI,OAAQpB,EAAR,KAAAoB,OAAkBF,GACzBH,EAAUG,EAEd,OAAOF,GAQLK,QAAU,SAACC,EAAYC,GAC1B,OAAOC,MAAMF,KAAgBG,OAAOF,IAOjCC,MAAQ,SAARA,MAASF,YAEX,IAAMI,OAASC,KAAKL,YAGpB,OAAII,OAAOE,WAAWC,SAAS,KACpBJ,OAAOC,OAAOhB,QAAQ,IAE1BgB,QAIII,oBAAA,GACXnB,gCACAU,gBACAG,oNC1GEO,EAAe,CACnBnB,OAAQ,EACRoB,MAAO,EACPC,QAAS,GACTC,MAAO,EACPC,YAAY,EACZC,WAAW,GCbEC,cAAQC,YAAgBC,KAAxBF,CAAgCG,IAAhCH,CDgBW,WAAuC,IAAtCI,EAAsCC,UAAA/C,OAAA,QAAAgD,IAAAD,UAAA,GAAAA,UAAA,GAA9BX,EAAca,EAAgBF,UAAA/C,OAAA,QAAAgD,IAAAD,UAAA,GAAAA,UAAA,GAAP,GACxD,OAAQE,EAAOC,MACb,IEpBuB,cFqBrB,IAAMC,EAAWL,EAAM7B,OAASgC,EAAOG,QACvC,OAAOC,OAAOC,OAAO,GAAIR,EAAO,CAC9B7B,OAAQkC,IAEZ,IE1BoB,WF2BlB,OAAOE,OAAOC,OAAO,GAAIR,EAAO,CAC9BR,QAASW,EAAOG,UAEpB,IEhC0B,iBFiCxB,IAAMG,EAAkB,CACtBtC,OAAQ6B,EAAM7B,OAASgC,EAAOG,QAAQnC,OACtCsB,MAAOO,EAAMP,MAAQU,EAAOG,QAAQb,OAEtC,OAAOc,OAAOC,OAAO,GAAIR,EAAOS,GAClC,IElCuB,cFmCrB,IAAMC,EAAUV,EAAMT,MAAQY,EAAOG,QACrC,OAAOC,OAAOC,OAAO,GAAIR,EAAO,CAC9BT,MAAOmB,IAEX,IEtCuB,cFuCrB,OAAOH,OAAOC,OAAO,GAAIR,EAAO,CAC9BN,WAAYS,EAAOG,UAEvB,IEzCwB,eF0CtB,OAAOC,OAAOC,OAAO,GAAIR,EAAO,CAC9B7B,OAAQ,EACRoB,MAAO,EACPC,QAAS,GACTC,MAAO,EACPC,YAAY,IAEhB,IE/CsB,aFgDpB,OAAOa,OAAOC,OAAO,GAAIR,EAAO,CAC9BL,WAAW,IAEf,IElDqB,YFmDnB,OAAOY,OAAOC,OAAO,GAAIR,EAAO,CAC9BT,MAAOS,EAAMT,MAAQ,IAEzB,IExDuB,cFyDrB,OAAOgB,OAAOC,OAAO,GAAIR,EAAO,CAC9B7B,OAAQ,EACRoB,MAAO,EACPC,QAAS,GACTC,MAAO,EACPC,YAAY,EACZC,WAAW,IAEf,QACE,OAAOK,gDGhDAW,EAAY,SAACC,GAAD,OAAS,SAACC,GAE3BA,EADAD,EACS,CAAER,KDtBQ,cCsBWE,SAAS,GAE9B,CAAEF,KDvBS,eCuBWE,SAAS,MCVjCQ,MAhBf,SAAAC,GAAyC,IAAvBC,EAAuBD,EAAvBC,SAAUC,EAAaF,EAAbE,UACxB,OACIC,EAAAC,EAAAC,cAAA,UACIC,UAAU,WACVC,QAASL,GAERD,ICPE,SAASO,EAATR,GAA8C,IAA7BX,EAA6BW,EAA7BX,KAAMoB,EAAuBT,EAAvBS,KAAMC,EAAiBV,EAAjBU,cACxC,OACIP,EAAAC,EAAAC,cAAA,SACIhB,KAAOA,GAAQ,OACfiB,UAAU,0BACVK,YAAaF,EACbG,SAAUF,ICPf,IAAMG,EAAa,CAEtBC,IAFsB,SAElBC,EAAKhD,GACLiD,aAAaC,QAAQF,EAAKhD,IAG9BmD,IANsB,SAMlBH,GACA,OAAOC,aAAaG,QAAQJ,KAMvBK,EAAU,CAEnBN,IAFmB,SAEfC,EAAKhD,GACLsD,eAAeJ,QAAQF,EAAKhD,IAGhCmD,IANmB,SAMfH,GACA,OAAOM,eAAeF,QAAQJ,KCiBvBO,6MA/BXrC,MAAQ,CACJsC,OAAQ,YAGZC,gBAAkB,SAACC,GACfC,EAAKC,SAAS,CAAEJ,OAAQE,EAAMG,OAAO7D,WAGzC8D,QAAU,WACNT,EAAQN,IAAI,eAAgBY,EAAKzC,MAAMsC,QACvCG,EAAKI,MAAMC,wFAIX,OACI5B,EAAAC,EAAAC,cAAA,WACIF,EAAAC,EAAAC,cAAA,OAAKC,UAAU,iBACXH,EAAAC,EAAAC,cAAA,KAAGC,UAAU,0BACbH,EAAAC,EAAAC,cAAA,WACAF,EAAAC,EAAAC,cAAA,yBACAF,EAAAC,EAAAC,cAAA,oBAEJF,EAAAC,EAAAC,cAACG,EAAD,CAAOC,KAAK,mBAAmBC,cAAesB,KAAKR,kBACnDrB,EAAAC,EAAAC,cAAA,oCAGAF,EAAAC,EAAAC,cAAC4B,EAAD,CAAQ/B,UAAW8B,KAAKH,SAAxB,iBA5BIK,IAAMC,WC+CXC,6MAhDbnD,MAAQ,CACNoD,IAAK,KAQPC,YAAc,SAAAC,GACZ,OAAsB,IAAlBA,EAAUF,IACL,CAAEA,IAAK,MAGM,OAAlBE,EAAUF,IACL,CAAEA,SAAKlD,GAET,CAAEkD,IAAKE,EAAUF,IAAM,uFAZZ,IAAAG,EAAAR,KAClBA,KAAKS,YAAcC,YAAY,kBAAMF,EAAKb,SAASa,EAAKF,cAAc,mDAclDK,EAAWC,GAC/B,YAAsBzD,IAAlByD,EAAUP,MACZQ,cAAcb,KAAKS,aACnBT,KAAKF,MAAMgB,cACJ,kDAMTD,cAAcb,KAAKS,8CAInB,OACEtC,EAAAC,EAAAC,cAAA,WACEF,EAAAC,EAAAC,cAAA,0BACAF,EAAAC,EAAAC,cAAA,UAAK2B,KAAK/C,MAAMoD,aAtCAH,IAAMC,WCSfY,EAXA,CACXC,OAAQ,UACRC,UAAW,UACXC,SAAU,UACVC,QAAS,UACTC,UAAW,UACXC,OAAQ,UACRC,IAAI,UACJC,MAAO,WCUX,SAASC,EAATC,GAAiC,IAAdhD,EAAcgD,EAAdhD,KAAMpB,EAAQoE,EAARpE,KACrB,OACIc,EAAAC,EAAAC,cAAA,YACKI,GAAkB,YAATpB,GAAuBc,EAAAC,EAAAC,cAAA,MAAIqD,MAAO,CAACC,MAAOZ,EAAOQ,QAAU9C,GACpEA,GAAkB,YAATpB,GAAuBc,EAAAC,EAAAC,cAAA,MAAIqD,MAAO,CAACC,MAAOZ,EAAOI,UAA1B,WAA6ChD,EAAAC,EAAAC,cAAA,QAAMqD,MAAO,CAACC,MAAOZ,EAAOK,YAAc3C,KAYrHmD,MA/Bf,SAAA5D,GAAqC,IAAdX,EAAcW,EAAdX,KAAMoB,EAAQT,EAARS,KAEnBoD,EAAqB,YAATxE,EACb,CAAEyE,MAAO,iBAAkBC,GAAI5D,EAAAC,EAAAC,cAAA,KAAGC,UAAU,kBAC5C,CAAEwD,MAAO,eAAgBC,GAAI5D,EAAAC,EAAAC,cAAA,KAAGC,UAAU,yBAC/C,OACIH,EAAAC,EAAAC,cAAA,eACIF,EAAAC,EAAAC,cAAA,OAAKC,UAAS,WAAA1C,OAAaiG,EAAUC,QACjC3D,EAAAC,EAAAC,cAAA,cAAMwD,EAAUE,GAAhB,MAEJ5D,EAAAC,EAAAC,cAACmD,EAAD,CAASnE,KAAMA,EAAMoB,KAAMA,cCgIxBuD,6MAxIXC,YAAa,IAGbhF,MAAQ,CACJzB,QAAS,GACT0G,OAAQ,EACRC,MAAO,GACPC,cAAc,EACdC,QAAS,KAIbC,SAAW,WACP5C,EAAKI,MAAMyC,aACX7C,EAAK8C,UAAU,UAAW,kCAC1B9C,EAAKC,SAAS,CACV0C,QAAS,OAIjBI,cAAgB,WACR/C,EAAKzC,MAAMoF,QAAU,EACrB3C,EAAK4C,WAEL5C,EAAK8C,UAAU,WAGnB9C,EAAKuC,YAAcvC,EAAKI,MAAM4C,iBAC9BhD,EAAKC,SACD,SAAA1C,GACI,MAAO,CACHoF,QAASpF,EAAMoF,QAAU,KAKrC3C,EAAKiD,iBAqBTC,YAAc,WACVlD,EAAKuC,YAAcvC,EAAKI,MAAM+C,gBAC9BnD,EAAKC,SAAS,CACV0C,QAAS,IAEb3C,EAAK8C,UAAU,QAASM,IAAW9G,MAAM0D,EAAKzC,MAAMzB,SAASY,YAC7DsD,EAAKiD,iBAGTA,YAAc,WACVI,WAAW,WACPrD,EAAKsD,aACLtD,EAAKuC,YAAcvC,EAAKC,SAAS,CAC7ByC,cAAc,IAEd1C,EAAKI,MAAMtD,MAAQ,GAAGkD,EAAKuD,YAAYC,SAC5C,SAGPC,gBAAkB,WACd,OAAIL,IAAWjH,QAAQ6D,EAAKzC,MAAMzB,QAAUkE,EAAKzC,MAAMiF,QAC5CxC,EAAK+C,gBAET/C,EAAKkD,iBAGhBQ,SAAW,SAAAC,GACQ,UAAXA,EAAGtE,KACHW,EAAKyD,kBAET,IAAMG,EAAMD,EAAGzD,OAAO7D,MAEtB2D,EAAKC,SAAS,CACVuC,OAAQjG,OAAOqH,EAAIC,MAAM,oBAIjCf,UAAY,SAACnF,EAAMoB,GACfiB,EAAKC,SAAS,CACVwC,MAAShE,EAAAC,EAAAC,cAACmF,EAAD,CAAanG,KAAMA,EAAMoB,KAAMA,IACxC2D,cAAc,OAItBY,WAAa,WACT,IAAMS,EAAaX,IAAW3H,gBAAgBuE,EAAKI,MAAM1E,QACzDsE,EAAKuC,YAAcvC,EAAKC,SAAS,CAC7BnE,QAASiI,wFAhEbzD,KAAKiC,YAAa,EAClBjC,KAAKgD,aACLhD,KAAKiD,YAAYC,sDAGCvC,GAClB,OAAIX,KAAKF,MAAMtD,MAAQ,GACnBwD,KAAKF,MAAM4D,UAAU1D,KAAK/C,MAAM7B,SACzB,GAEJuF,EAAUnE,OAAS,iDAI1BwD,KAAKiC,YAAa,mCAsDb,IAAAzB,EAAAR,KACL,OACA7B,EAAAC,EAAAC,cAAA,WAASC,UAAU,WACfH,EAAAC,EAAAC,cAAA,WACC2B,KAAK/C,MAAMmF,aAEJpC,KAAK/C,MAAMkF,MAEXhE,EAAAC,EAAAC,cAAA,WACIF,EAAAC,EAAAC,cAAA,MAAIqD,MAAO,CAAEiC,SAAU,UAAvB,IAAmC3D,KAAK/C,MAAMzB,QAA9C,KACA2C,EAAAC,EAAAC,cAAA,SACIuF,IAAK,SAACC,GAAYrD,EAAKyC,YAAcY,GACrCvF,UAAY,YACZjB,KAAO,SACPsB,YAAc,YACdmF,IAAI,IACJC,QACI/D,KAAKoD,qBA/HlBlD,IAAMC,WCDnBuB,EACS,CACXiC,SAAU,QACVhC,MAAO,UACPqC,WAAY,UACZC,OAAQ,WALNvC,EAOS,CACXC,MAAO,QACPqC,WAAY,UACZC,OAAQ,UACRN,SAAU,MACVO,OAAQ,kBAZNxC,EAcK,CACPyC,OAAQ,EACRC,OAAQ,uBAhBN1C,EAkBS,CACXC,MAAO,UACP0C,WAAY,QAiCDC,mLA5BJ,IACCC,EAAmD7C,EAA1C8C,EAA0C9C,EAA7B+C,EAA6B/C,EAAhBgD,EAAgBhD,EAC3D,OACEvD,EAAAC,EAAAC,cAAA,WACEF,EAAAC,EAAAC,cAAA,uBACAF,EAAAC,EAAAC,cAAA,MAAIqD,MAAO6C,IACXpG,EAAAC,EAAAC,cAAA,yBACcF,EAAAC,EAAAC,cAAA,KAAGqD,MAAOgD,GAAc1E,KAAKF,MAAM1E,SAEjD+C,EAAAC,EAAAC,cAAA,WACAF,EAAAC,EAAAC,cAAA,MAAIqD,MAAO8C,EAAajG,QAASyB,KAAKF,MAAM6E,WAA5C,SAGAxG,EAAAC,EAAAC,cAAA,MAAIqD,MAAO+C,EAAalG,QAASyB,KAAKF,MAAM8E,eAA5C,kBAGC5E,KAAK/B,iBAjBKiC,IAAMC,WCxBnB0E,cAIF,SAAAA,EAAY/E,GAAO,IAAAJ,EAAA,OAAAlC,OAAAsH,EAAA,EAAAtH,CAAAwC,KAAA6E,IACfnF,EAAAlC,OAAAuH,EAAA,EAAAvH,CAAAwC,KAAAxC,OAAAwH,EAAA,EAAAxH,CAAAqH,GAAAI,KAAAjF,KAAMF,KACD7C,MAAQ,CACTR,QAASiD,EAAKI,MAAMrD,QACpBC,MAAOgD,EAAKI,MAAMpD,OAJPgD,mFAQC,IAAAc,EAAAR,KAChBA,KAAKL,SAAS,CACZlD,QAASuD,KAAKF,MAAMrD,UAEtBuD,KAAKkF,oBAAsBxE,YAAY,kBAAMF,EAAKb,SAAS,SAAAY,GAAS,MAAK,CACrE9D,UAAW8D,EAAU9D,YACpB,kDAIY,IAAA0I,EAAAnF,KACbA,KAAKF,MAAMpD,QAAUsD,KAAK/C,MAAMP,QAEhCsD,KAAKL,SAAS,SAAAY,GAAS,MAAK,CAC1B7D,MAAOyI,EAAKrF,MAAMpD,MAClBD,QAAS8D,EAAU9D,QAAU,MAG/BuD,KAAKF,MAAMsF,eAAepF,KAAK/C,MAAMR,UAGtCuD,KAAK/C,MAAMR,QAAU,GACpBuD,KAAKF,MAAM4D,2DAKf7C,cAAcb,KAAKkF,sDAInB,OACI/G,EAAAC,EAAAC,cAAA,YACIF,EAAAC,EAAAC,cAAA,KAAGC,UAAU,iBADjB,IACqCH,EAAAC,EAAAC,cAAA,SAAK2B,KAAK/C,MAAMR,iBA7C5CyD,IAAMC,WAwD3B0E,EAAOQ,aAAe,CAClB3I,MAAO,GAGImI,QClCAS,MAzBf,SAAAtH,GAA0B,IAATxB,EAASwB,EAATxB,MAET+I,EAAS,GAEb,GAAI/I,EAAQ,EACR,IAAK,IAAIf,EAAI,EAAGA,EAAIe,EAAOf,IACvB8J,EAAOC,KAAKrH,EAAAC,EAAAC,cAAA,KAAGU,IAAKtD,EAAGiG,MAAO,CAAC+D,WAAY,SAAUnH,UAAU,uBAGnEiH,EAAOC,KAAKrH,EAAAC,EAAAC,cAAA,KAAGU,IAAKvC,EAAOkF,MAAO,CAAC+D,WAAY,SAAUnH,UAAU,kBAIvE,OACIH,EAAAC,EAAAC,cAAA,QAAMqD,MAAO,CAACC,MAAOZ,EAAOO,MACvB9E,EAAQ,GAAK2B,EAAAC,EAAAC,cAAA,YAAAzC,OAAOY,EAAP,MACb+I,ICjBE,SAASG,EAAT1H,GAA6B,IAAV5C,EAAU4C,EAAV5C,OAE9B,OACI+C,EAAAC,EAAAC,cAAA,YACIF,EAAAC,EAAAC,cAAA,KAAGC,UAAU,cAAcoD,MAAO,CAAEC,MAAOZ,EAAOC,UADtD,IACsE5F,qBCAxEsG,EAAQ,CACViE,UAAU,CACNC,QAAS,OACTC,eAAgB,gBAEpB9D,GAAI,CACA+D,KAAM,GAEVC,MAAO,CACH7B,OAAQ,cAEZK,QAAS,CAAEH,OAAM,eAAAxI,OAAiBmF,EAAOI,UACzC6E,QAAS,CACLF,KAAM,EACNG,QAAS,YACTtC,SAAU,QACVhC,MAAOZ,EAAOG,UAElBgF,iBAAkB,CAAEC,UAAW,OAAQF,QAAS,eAKpD,SAASG,EAATpI,GAA+B,IAAVuB,EAAUvB,EAAVuB,OACjB,OACIpB,EAAAC,EAAAC,cAAA,OAAKqD,MAAOA,EAAMwE,kBACd/H,EAAAC,EAAAC,cAAA,MAAIqD,MAAOA,EAAMqE,OAAQxG,EAAO8G,MAChClI,EAAAC,EAAAC,cAAA,OAAKqD,MAAOA,EAAMiE,WACdxH,EAAAC,EAAAC,cAAA,SAAOqD,MAAOA,EAAMsE,SAChB7H,EAAAC,EAAAC,cAAA,KAAGC,UAAU,iBACZ,IAAMgI,EAAO,IAAIC,KAAKhH,EAAOiH,OAAOC,WAEzCtI,EAAAC,EAAAC,cAAA,SAAOqD,MAAOA,EAAMK,IAAI5D,EAAAC,EAAAC,cAAA,KAAGC,UAAU,cAAcoD,MAAO,CAACC,MAAOZ,EAAOC,UAAzE,IAAyFzB,EAAOnE,SAEpG+C,EAAAC,EAAAC,cAAA,MAAIqD,MAAOA,EAAM6C,WASd,SAASmC,EAATjF,GAAiC,IAAVrG,EAAUqG,EAAVrG,OAE5BuL,EAAavH,EAAQF,IAAI,gBAC3B0H,EAAaC,KAAKC,MAAMjI,EAAWK,IAAI,gBAAkB,GAY7D,OAVA0H,EAAWpB,KAAK,CACZa,KAAMM,EACNvL,SACAoL,KAAMD,KAAKQ,QAGfH,EAAaA,EAAWI,KAAK,SAAC5I,EAAG6I,GAAJ,OAAUA,EAAE7L,OAASgD,EAAEhD,SAAQ8L,MAAM,EAAE,GAEpErI,EAAWC,IAAI,aAAc+H,KAAKM,UAAUP,IAGxCzI,EAAAC,EAAAC,cAAA,WAEQuI,EAAWQ,IAAI,SAAC7H,EAAQ9D,GACpB,OACI0C,EAAAC,EAAAC,cAAC+H,EAAD,CAAU7G,OAAQA,EAAQR,IAAKtD,WCrBxC4L,6MAtCbpK,MAAQ,CACNqK,iBAAiB,EACjBC,WAAY,KAGd5C,UAAY,WACVjF,EAAKC,SAAS,CAAE2H,iBAAiB,IACjC5H,EAAKI,MAAM0H,iBAGbC,kBAAoB,WAClB/H,EAAKC,SAAS,CAAE2H,iBAAiB,6EAIjC,OAAQtH,KAAKF,MAAMnD,WAgBjBwB,EAAAC,EAAAC,cAACqJ,EAADlK,OAAAC,OAAA,GAAUuC,KAAKF,MAAf,CAAsB6E,UAAW3E,KAAK2E,YACpCxG,EAAAC,EAAAC,cAACqI,EAAe1G,KAAKF,QAhBvB3B,EAAAC,EAAAC,cAAA,WACI2B,KAAK/C,MAAMqK,gBAGXnJ,EAAAC,EAAAC,cAAA,WACIF,EAAAC,EAAAC,cAAA,OAAKC,UAAU,kBACbH,EAAAC,EAAAC,cAACsJ,EAAW3H,KAAKF,OACjB3B,EAAAC,EAAAC,cAACuJ,EAAU5H,KAAKF,OAChB3B,EAAAC,EAAAC,cAACqH,EAAW1F,KAAKF,QAEnB3B,EAAAC,EAAAC,cAACwJ,EAAS7H,KAAKF,QARnB3B,EAAAC,EAAAC,cAACyJ,EAAD,CAAWhH,WAAYd,KAAKyH,4BAnBfvH,IAAMC,iBCRd,SAAS4H,IACpB,OACI5J,EAAAC,EAAAC,cAAA,UAAQC,UAAU,cAChBH,EAAAC,EAAAC,cAAA,oCAAsBF,EAAAC,EAAAC,cAAA,KAAG2J,KAAK,6BAA6BC,IAAI,sBAAsBrI,OAAO,UAAtE,qBCG1BsI,6MAGJC,UAAY,WACVzI,EAAKI,MAAMsI,uFAIX,OACEjK,EAAAC,EAAAC,cAAA,OAAKC,UAAU,OACbH,EAAAC,EAAAC,cAAA,UAAQC,UAAU,cAEb0B,KAAKF,MAAMlD,UAGVuB,EAAAC,EAAAC,cAACgK,EAAD7K,OAAAC,OAAA,GAAeuC,KAAKF,MAApB,CAA2BqI,UAAWnI,KAAKmI,aAF3ChK,EAAAC,EAAAC,cAACiK,EAAD,CAAOvI,aAAcC,KAAKmI,aAMhChK,EAAAC,EAAAC,cAAC0J,EAAD,cAnBU5H,aAyBHoI,cCvBgB,SAAAtL,GAC7B,MAAO,CACL7B,OAAQ6B,EAAM7B,OACdoB,MAAOS,EAAMT,MACbC,QAASQ,EAAMR,QACfC,MAAOO,EAAMP,MACbC,WAAYM,EAAMN,WAClBC,UAAWK,EAAML,YAIa,SAAAkB,GAChC,MAAO,CACL4E,eAAgB,SAAA8F,GAAC,OAAI1K,EjBZU,SAACA,GAChCA,EAAS,CAAET,KDZe,iBCYOE,QAAS,CAAEnC,OAAQ,IAAKsB,MAAO,QiBYhEmG,cAAe,kBAAM/E,EjBRQ,SAACA,GAC9BA,EAAS,CAAET,KDbY,cCaOE,QAAS,OiBQvC6H,eAAgB,SAAAoD,GAAC,OAAI1K,GjBJCrB,EiBImB+L,EjBJR,SAAC1K,GAClCA,EAAS,CAAET,KDpBS,WCoBOE,QAASd,OADd,IAAAA,GiBKtBiH,UAAW,kBAAM5F,EAASF,GAAU,KACpC4J,YAAa,kBAAM1J,EAASF,GAAU,KACtCgH,cAAe,kBAAM9G,EjBKQ,SAACA,GAC9BA,EAAS,CAAET,KD3BY,mBkBsBvB+K,YAAa,kBAAMtK,EjBQQ,SAACA,GAC5BA,EAAS,CAAET,KD9BW,kBkBsBtBkF,WAAY,kBAAMzE,EjBWQ,SAAAA,GAC1BA,EAAS,CAAET,KDjCU,mBiBwBVkL,CAA6CL,GErBtDO,EAAcC,QACW,cAA7BC,OAAOC,SAASC,UAEe,UAA7BF,OAAOC,SAASC,UAEhBF,OAAOC,SAASC,SAAStF,MACvB,2DAsCN,SAASuF,EAAgBC,EAAOC,GAC9BC,UAAUC,cACPC,SAASJ,GACTK,KAAK,SAAAC,GACJA,EAAaC,cAAgB,WAC3B,IAAMC,EAAmBF,EAAaG,WACd,MAApBD,IAGJA,EAAiBE,cAAgB,WACA,cAA3BF,EAAiBtM,QACfgM,UAAUC,cAAcQ,YAI1BC,QAAQC,IACN,iHAKEZ,GAAUA,EAAOa,UACnBb,EAAOa,SAASR,KAMlBM,QAAQC,IAAI,sCAGRZ,GAAUA,EAAOc,WACnBd,EAAOc,UAAUT,UAO5BU,MAAM,SAAAC,GACLL,QAAQK,MAAM,4CAA6CA,KCxFjEC,IAASC,OACL/L,EAAAC,EAAAC,cAAC8L,EAAA,EAAD,CAAUC,MAAOA,GACbjM,EAAAC,EAAAC,cAACgM,EAAD,OAEFC,SAASC,eAAe,SDUvB,SAAkBvB,GACvB,GAA6C,kBAAmBC,UAAW,CAGzE,GADkB,IAAIuB,IAAIC,aAAwB9B,OAAOC,SAASZ,MACpD0C,SAAW/B,OAAOC,SAAS8B,OAIvC,OAGF/B,OAAOgC,iBAAiB,OAAQ,WAC9B,IAAM5B,EAAK,GAAAnN,OAAM6O,aAAN,sBAEPhC,GAgEV,SAAiCM,EAAOC,GAEtC4B,MAAM7B,GACHK,KAAK,SAAAyB,GAEJ,IAAMC,EAAcD,EAASE,QAAQ7L,IAAI,gBAEnB,MAApB2L,EAASG,QACO,MAAfF,IAA8D,IAAvCA,EAAYG,QAAQ,cAG5ChC,UAAUC,cAAcgC,MAAM9B,KAAK,SAAAC,GACjCA,EAAa8B,aAAa/B,KAAK,WAC7BT,OAAOC,SAASwC,aAKpBtC,EAAgBC,EAAOC,KAG1Be,MAAM,WACLJ,QAAQC,IACN,mEArFAyB,CAAwBtC,EAAOC,GAI/BC,UAAUC,cAAcgC,MAAM9B,KAAK,WACjCO,QAAQC,IACN,gHAMJd,EAAgBC,EAAOC,MChC/BE","file":"static/js/main.a0cbc3fb.chunk.js","sourcesContent":["export const PRIMES_NUMBERS = [2, 3, 5, 7, 11, 13, 17, 19, 23, 29, 31, 37, 41, 43, 47, 53, 59, 61, 67, 71, 73, 79, 83, 89, 97]\r\n\r\n\r\n/**\r\n * Get a random symbol (+ , - , / , *)\r\n */\r\nconst getRandomSymbol = () => {\r\n    const symbols = [\"+\", \"-\", \"/\", \"*\", \"+\"]; // Adding another \"addition\" at the end to grow the posibilities.\r\n    var min = 0;\r\n    var max = symbols.length - 1;\r\n    var random = Math.round(Math.random() * (+max - +min) + +min);\r\n    return symbols[random];\r\n}\r\n\r\n\r\n/**\r\n * Return a fuction and it will be used to generate the next number of the operation\r\n * \r\n * @param {string} symbol \r\n * @param {number} prev \r\n */\r\nexport const evaluate = (symbol, prev) => {\r\n\r\n    // Division\r\n    if  (symbol === \"/\") {\r\n        return () => {\r\n            const ram = Math.floor(Math.random() * (10 - 1) + 1) \r\n            const commonMultiple = PRIMES_NUMBERS.filter(n => (prev % n === 0) && ram * n)\r\n            const index = Math.floor(Math.random() * (commonMultiple.length - 1))\r\n            \r\n            return +commonMultiple[index] || 1\r\n        }\r\n    } \r\n\r\n\r\n    // Multiplication\r\n    if (symbol === \"*\") {\r\n\r\n        let ramNum = 0\r\n\r\n        if (prev < 15) {\r\n            ramNum = 15\r\n        }\r\n\r\n        if (prev > 14 && prev < 50) {\r\n            ramNum = 8\r\n        }\r\n\r\n        if (prev > 49) {\r\n            ramNum = 5\r\n        }\r\n\r\n        return () => getRandomNumber(ramNum)\r\n    }\r\n\r\n    // Others\r\n    return () => getRandomNumber(70)\r\n}\r\n\r\n/**\r\n * Get a random number from zero to range passed as parameter (default 100)\r\n * \r\n * @param {number} range \r\n */\r\nconst getRandomNumber = range => {\r\n    return (Math.random() * (range || 100)).toFixed()\r\n}\r\n\r\n\r\n/**\r\n * Return an math operation depending of the user's point.\r\n * \r\n * @param {number} points \r\n */\r\nconst generateProblem = (points) => {\r\n\r\n    const lv = parseInt(((points/100) /5) + 1)\r\n    let prevNum =  getRandomNumber();\r\n    let problem = prevNum\r\n\r\n    for (let i=0; i < lv; i++) {\r\n        let symbol = getRandomSymbol();\r\n        let getAnotherNumber = evaluate(symbol, prevNum)\r\n        let anotherNumber = getAnotherNumber() || 0 // Avoid undefined\r\n        problem += ` ${symbol} ${anotherNumber}`\r\n        prevNum = anotherNumber\r\n    }\r\n    return problem\r\n};\r\n\r\n/**\r\n * Evaluate the math expression with the value passed. \r\n * @param {string} expression \r\n * @param {number} value \r\n */\r\nconst compare = (expression, value) => {\r\n   return solve(expression) === Number(value)\r\n}\r\n\r\n/**\r\n * Solve the expression\r\n * @param {string} expression \r\n */\r\nconst solve = (expression) => {\r\n    // eslint-disable-next-line no-eval\r\n    const result = eval(expression)\r\n    \r\n    // Returning just two fixed-point\r\n    if (result.toString().includes(\".\")) {\r\n        return Number(result.toFixed(2))\r\n    }\r\n    return result;\r\n}\r\n\r\n\r\nexport default {\r\n    generateProblem,\r\n    compare,\r\n    solve\r\n}","import {\r\n  SET_TIME,\r\n  GAIN_POINTS,\r\n  REMOVE_LIVE,\r\n  CORRECT_ANSWER,\r\n  FINISH_GAME,\r\n  RESTART_GAME,\r\n  REBOOT_GAME,\r\n  START_GAME,\r\n  EARN_LIFE\r\n} from \"../constants\";\r\n\r\nconst initialState = {\r\n  points: 0,\r\n  lifes: 5,\r\n  seconds: 20,\r\n  level: 1,\r\n  isFinished: false,\r\n  isStarted: false,\r\n};\r\n\r\nexport const answerQuiz = (state = initialState, action = {}) => {\r\n  switch (action.type) {\r\n    case GAIN_POINTS:\r\n      const newPonts = state.points + action.payload;\r\n      return Object.assign({}, state, {\r\n        points: newPonts\r\n      });\r\n    case SET_TIME:\r\n      return Object.assign({}, state, {\r\n        seconds: action.payload\r\n      });\r\n    case CORRECT_ANSWER:\r\n      const newCorrectState = {\r\n        points: state.points + action.payload.points,\r\n        level: state.level + action.payload.level\r\n      };\r\n      return Object.assign({}, state, newCorrectState);\r\n    case REMOVE_LIVE:\r\n      const newLive = state.lifes - action.payload;\r\n      return Object.assign({}, state, {\r\n        lifes: newLive\r\n      });\r\n    case FINISH_GAME:\r\n      return Object.assign({}, state, {\r\n        isFinished: action.payload\r\n      });\r\n    case RESTART_GAME:\r\n      return Object.assign({}, state, {\r\n        points: 0,\r\n        lifes: 3,\r\n        seconds: 20,\r\n        level: 1,\r\n        isFinished: false,\r\n      });\r\n    case START_GAME:\r\n      return Object.assign({}, state, {\r\n        isStarted: true,\r\n      });\r\n    case EARN_LIFE: \r\n      return Object.assign({}, state, {\r\n        lifes: state.lifes + 1\r\n      });\r\n    case REBOOT_GAME:\r\n      return Object.assign({}, state, {\r\n        points: 0,\r\n        lifes: 3,\r\n        seconds: 20,\r\n        level: 1,\r\n        isFinished: false,\r\n        isStarted: false,\r\n      });\r\n    default:\r\n      return state;\r\n  }\r\n}","import { createStore, applyMiddleware, compose } from \"redux\";\r\nimport thunk from 'redux-thunk'\r\nimport { answerQuiz } from './reducers/index'\r\n\r\n\r\nexport default compose(applyMiddleware(thunk))(createStore)(answerQuiz) // store;","export const CORRECT_ANSWER = \"CORRECT_ANSWER\";\r\nexport const WRONG_ANSWER = \"WRONG_ANSWER\";\r\nexport const SET_TIME = \"SET_TIME\";\r\nexport const GAIN_POINTS = \"GAIN_POINTS\";\r\nexport const REMOVE_LIVE = \"REMOVE_LIVE\";\r\nexport const FINISH_GAME = \"FINISH_GAME\";\r\nexport const RESTART_GAME = \"RESTART_GAME\";\r\nexport const REBOOT_GAME = \"REBOOT_GAME\";\r\nexport const START_GAME = \"START_GAME\";\r\nexport const EARN_LIFE = \"EARN_LIFE\";","import {\r\n  REMOVE_LIVE,\r\n  CORRECT_ANSWER,\r\n  SET_TIME,\r\n  FINISH_GAME,\r\n  RESTART_GAME,\r\n  REBOOT_GAME,\r\n  START_GAME,\r\n  EARN_LIFE\r\n} from \"../constants/index\";\r\n\r\nexport const correctAnswer = () => (dispatch) => {\r\n    dispatch({ type: CORRECT_ANSWER, payload: { points: 100, level: 1} });\r\n    \r\n};\r\n\r\nexport const wrongAnswer = () => (dispatch) => {\r\n    dispatch({ type: REMOVE_LIVE, payload: 1 });\r\n}\r\n\r\n\r\nexport const timeChaged = seconds => (dispatch) => {\r\n    dispatch({ type: SET_TIME, payload: seconds });    \r\n}\r\n\r\nexport const stateGame = (bol) => (dispatch) => {\r\n    if (bol) {\r\n        dispatch({ type: FINISH_GAME, payload: true });\r\n    } else {\r\n        dispatch({ type: RESTART_GAME, payload: true });\r\n    }\r\n}\r\n\r\nexport const reStartGame = () => (dispatch) => {\r\n    dispatch({ type: REBOOT_GAME });\r\n}\r\n\r\nexport const startGame = () => (dispatch) => {\r\n    dispatch({ type: START_GAME });\r\n}\r\n\r\nexport const earnLife = () => dispatch => {\r\n    dispatch({ type: EARN_LIFE });\r\n}\r\n","import React from \"react\";\r\nimport PropTypes from 'prop-types'\r\n\r\nfunction Button({ children, isClicked }) {\r\n    return (\r\n        <button\r\n            className=\"App-link\"\r\n            onClick={isClicked}\r\n        >\r\n            {children}\r\n        </button>\r\n    )\r\n}\r\n\r\nButton.propTypes = {\r\n    children: PropTypes.any.isRequired,\r\n    isClicked: PropTypes.func,\r\n}\r\n\r\nexport default Button;","import React from \"react\";\r\n\r\nexport default function Input({ type, text, onInputChange }) {\r\n    return (\r\n        <input \r\n            type={ type || \"text\" } \r\n            className=\"App-input App-input--sm\" \r\n            placeholder={text} \r\n            onChange={onInputChange}\r\n        />\r\n    )\r\n}","\r\nexport const Persistent = {\r\n\r\n    set(key, value) {\r\n        localStorage.setItem(key, value)\r\n    },\r\n\r\n    get(key) {\r\n        return localStorage.getItem(key);\r\n    }\r\n\r\n}\r\n\r\n\r\nexport const Session = {\r\n\r\n    set(key, value) {\r\n        sessionStorage.setItem(key, value)\r\n    },\r\n\r\n    get(key) {\r\n        return sessionStorage.getItem(key);\r\n    }\r\n\r\n}\r\n\r\nexport default {\r\n    Persistent,\r\n    Session\r\n};","import React from 'react';\r\nimport Button from '../components/Button';\r\nimport Input from '../components/Input';\r\nimport { Session } from '../utils/storage'\r\n\r\nclass Start extends React.Component {\r\n\r\n    state = {\r\n        player: \"player\"\r\n    }\r\n\r\n    setNameOfPlayer = (event) => {\r\n        this.setState({ player: event.target.value })\r\n    }\r\n\r\n    clicked = () => {\r\n        Session.set(\"onlinePlayer\", this.state.player)\r\n        this.props.startPressed();\r\n    }\r\n\r\n    render (){\r\n        return (\r\n            <div>\r\n                <div className=\"App-brandname\">\r\n                    <i className=\"fas fa-graduation-cap\"></i> \r\n                    <br/>    \r\n                    <h3>Do You Know</h3>     \r\n                    <h1>Math?</h1>\r\n                </div>\r\n                <Input text=\"Insert your name\" onInputChange={this.setNameOfPlayer} />\r\n                <p>\r\n                    Press to start the game\r\n                </p>\r\n                <Button isClicked={this.clicked}>Start</Button>\r\n            </div>\r\n        )\r\n    }\r\n}\r\nexport default Start;","import React from \"react\";\r\nimport PropTypes from 'prop-types'\r\n\r\nclass Beginning extends React.Component {\r\n  state = {\r\n    msg: 3\r\n  };\r\n  intervalRef;\r\n\r\n  componentDidMount() {\r\n    this.intervalRef = setInterval(() => this.setState(this.handleCount), 1000);\r\n  }\r\n\r\n  handleCount = prevState => {\r\n    if (prevState.msg === 1) {\r\n      return { msg: \"GO\" };\r\n    }\r\n\r\n    if (prevState.msg === \"GO\") {\r\n      return { msg: undefined };\r\n    }\r\n    return { msg: prevState.msg - 1 };\r\n  };\r\n\r\n  shouldComponentUpdate(nextProps, nextState) {\r\n    if (nextState.msg === undefined) {\r\n      clearInterval(this.intervalRef);\r\n      this.props.isComplete();\r\n      return false;\r\n    }\r\n    return true;\r\n  }\r\n\r\n  componentWillUnmount() {\r\n    clearInterval(this.intervalRef);\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <div>\r\n        <h3>GET READY...</h3>\r\n        <h1>{this.state.msg}</h1>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\n\r\nBeginning.propTypes = {\r\n  isComplete: PropTypes.func.isRequired,\r\n}\r\n\r\nexport default Beginning;\r\n","\r\nconst Colors = {\r\n    yellow: \"#d8b600\",\r\n    lightBlue: \"#61dafb\",\r\n    darkGray: \"#999ea7\",\r\n    midGray: \"#424855\",\r\n    lightGray: \"#f5f5f5\",\r\n    darkBg: \"#282c34\",\r\n    red:\"#ff6572\",\r\n    green: \"#31cd61\"\r\n}\r\n\r\nexport default Colors","import React from 'react';\r\nimport Colors from '../constant/colors'\r\nimport PropTypes from 'prop-types'\r\n\r\nfunction AnswerModal({ type, text }) {\r\n\r\n    const modalType = type === \"success\" ? \r\n        ({ class: \"correct-answer\", el: <i className=\"fas fa-check\"></i>}) : \r\n        ({ class: \"wrong-answer\", el: <i className=\"fas fa-times-circle\"></i>});\r\n    return (\r\n        <section>\r\n            <div className={`answer  ${modalType.class}`}>\r\n                <h2> {modalType.el} </h2>\r\n            </div>\r\n            <Message type={type} text={text} />\r\n        </section>\r\n        );\r\n}\r\n\r\nfunction Message({ text, type }) {\r\n    return (\r\n        <span>\r\n            {text && (type === \"success\") && <h4 style={{color: Colors.green }}>{text}</h4> } \r\n            {text && (type !== \"success\") && <h4 style={{color: Colors.midGray }}>Answer: <span style={{color: Colors.lightGray }}>{text}</span></h4>}\r\n        </span>\r\n    )\r\n}\r\n\r\n\r\nAnswerModal.propTypes = {\r\n    type: PropTypes.oneOf(['success', 'error']),\r\n    text: PropTypes.string,\r\n}\r\n\r\n\r\nexport default AnswerModal;","import React from 'react';\r\nimport AnswerModal from './AnswerModal';\r\nimport { MathHelper } from '../utils';\r\n\r\nclass Quiz extends React.Component {\r\n\r\n    _isMounted = false;\r\n    _secondsIntervalRef;\r\n\r\n    state = {\r\n        problem: \"\",\r\n        answer: 0,\r\n        modal: \"\",\r\n        modalShowing: false,\r\n        streaks: 0\r\n    };\r\n\r\n\r\n    earnLife = () => {\r\n        this.props.onEarnLife()\r\n        this.showModal(\"success\", \"STREAK!! You won a life ♥\");\r\n        this.setState({\r\n            streaks: 0\r\n        })\r\n    }\r\n\r\n    correctAnswer = () => {\r\n        if (this.state.streaks > 2) {\r\n            this.earnLife()\r\n        } else {\r\n            this.showModal(\"success\");\r\n        }\r\n\r\n        this._isMounted && this.props.onCorretAnswer()\r\n        this.setState(\r\n            state => {\r\n                return {\r\n                    streaks: state.streaks + 1\r\n                }\r\n            }\r\n        )\r\n\r\n        this.nextProblem()\r\n    };\r\n\r\n    componentDidMount() {\r\n        this._isMounted = true;\r\n        this.getProblem();\r\n        this.answerInput.focus();\r\n    }\r\n\r\n    shouldComponentUpdate(nextProps) {\r\n        if (this.props.lifes < 1) {\r\n            this.props.onEndGame(this.state.points)\r\n            return false;\r\n        }\r\n        return nextProps.lifes > -1;\r\n    }\r\n\r\n    componentWillUnmount() {\r\n        this._isMounted = false;\r\n    }\r\n\r\n    wrongAnswer = () => {\r\n        this._isMounted && this.props.onWrongAnswer();\r\n        this.setState({\r\n            streaks: 0\r\n        })\r\n        this.showModal(\"error\", MathHelper.solve(this.state.problem).toString());\r\n        this.nextProblem()\r\n    };\r\n\r\n    nextProblem = () => {\r\n        setTimeout(() => {\r\n            this.getProblem()\r\n            this._isMounted && this.setState({\r\n                modalShowing: false\r\n            });\r\n            if (this.props.lifes > 0) this.answerInput.focus();\r\n        }, 2500)\r\n    }\r\n\r\n    evaluateProblem = () => {\r\n        if (MathHelper.compare(this.state.problem , this.state.answer)) {\r\n            return this.correctAnswer();\r\n        }\r\n        return this.wrongAnswer();\r\n    };\r\n\r\n    keyingUp = ev => {\r\n        if (ev.key === \"Enter\") {\r\n            this.evaluateProblem();\r\n        }\r\n        const val = ev.target.value\r\n\r\n        this.setState({\r\n            answer: Number(val.match(/((-?)\\d+)/g)) // accept just numbers and the minus symbol\r\n        });\r\n    };\r\n\r\n    showModal = (type, text) => {\r\n        this.setState({\r\n            modal: ( <AnswerModal type={type} text={text} />),\r\n            modalShowing: true,\r\n        });\r\n    };\r\n\r\n    getProblem = () => {\r\n        const newProblem = MathHelper.generateProblem(this.props.points);\r\n        this._isMounted && this.setState({\r\n            problem: newProblem\r\n        });\r\n    };\r\n\r\n    render() {\r\n        return ( \r\n        <section className=\"show-up\">\r\n            <div> \r\n            {this.state.modalShowing ? \r\n                (\r\n                    this.state.modal\r\n                ) : ( \r\n                    <div>\r\n                        <h1 style={{ fontSize: \"3.5em\"}}> {this.state.problem} </h1> \r\n                        <input \r\n                            ref={(input) => { this.answerInput = input; }}\r\n                            className = \"App-input\"\r\n                            type = \"number\"\r\n                            placeholder = \"Respuesta\"\r\n                            min=\"0\"\r\n                            onKeyUp = {\r\n                                this.keyingUp\r\n                            }/> \r\n                    </div>\r\n                )\r\n            }\r\n            </div> \r\n        </section>\r\n        );\r\n    }\r\n}\r\n\r\nexport default Quiz;","import React from \"react\";\r\nimport PropTypes from 'prop-types'\r\n\r\nconst style = {\r\n  buttonRetry: {\r\n    fontSize: \"1.5em\",\r\n    color: \"#61dafb\",\r\n    fontFamily: \"fantasy\",\r\n    cursor: \"pointer\"\r\n  },\r\n  otherButton: {\r\n    color: \"white\",\r\n    fontFamily: \"fantasy\",\r\n    cursor: \"pointer\",\r\n    fontSize: \"1em\",\r\n    margin: \"0.1em auto 3em\"\r\n  },\r\n  divider: {\r\n    height: 0,\r\n    border: \"0.5px solid #61dafb\"\r\n  },\r\n  poinstStyle: {\r\n    color: \"#61dafb\",\r\n    fontWeight: \"bold\"\r\n  }\r\n};\r\n\r\nclass Done extends React.Component {\r\n  render() {\r\n    const { divider, buttonRetry, otherButton, poinstStyle } = style;\r\n    return (\r\n      <div>\r\n        <h1>GAME OVER</h1>\r\n        <hr style={divider} />\r\n        <h3>\r\n          FINAL SCORE <b style={poinstStyle}>{this.props.points}</b>\r\n        </h3>\r\n        <br />\r\n        <h3 style={buttonRetry} onClick={this.props.retryGame}>\r\n          RETRY\r\n        </h3>\r\n        <h5 style={otherButton} onClick={this.props.onReStartGame}>\r\n          Another player\r\n        </h5>\r\n        {this.children}\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nDone.propTypes = {\r\n  points: PropTypes.number.isRequired,\r\n  retryGame: PropTypes.func.isRequired,\r\n  onReStartGame: PropTypes.func.isRequired\r\n}\r\n\r\nexport default Done;\r\n","import React from 'react'\r\nimport PropTypes from 'prop-types'\r\n\r\nclass Timmer extends React.Component {\r\n\r\n    _secondsIntervalRef;\r\n    \r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            seconds: this.props.seconds,\r\n            level: this.props.level\r\n        }\r\n    }\r\n\r\n    componentDidMount() {\r\n        this.setState({\r\n          seconds: this.props.seconds\r\n        });\r\n        this._secondsIntervalRef = setInterval(() => this.setState(prevState => ({\r\n            seconds: --prevState.seconds\r\n        })), 1000)\r\n    }\r\n\r\n\r\n    componentDidUpdate() {\r\n        if (this.props.level !== this.state.level) {\r\n\r\n            this.setState(prevState => ({\r\n              level: this.props.level,\r\n              seconds: prevState.seconds + 20\r\n            }));\r\n            \r\n            this.props.setTimeChanged(this.state.seconds);\r\n        }\r\n\r\n        if(this.state.seconds < 0) {\r\n            this.props.onEndGame();\r\n        }\r\n    }\r\n    \r\n    componentWillUnmount() {\r\n        clearInterval(this._secondsIntervalRef);\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <span>\r\n                <i className=\"fas fa-clock\"></i> <b>{ this.state.seconds }</b>\r\n            </span>\r\n        )\r\n    }\r\n}\r\n\r\nTimmer.propTypes = {\r\n    seconds: PropTypes.number.isRequired,\r\n    level: PropTypes.number.isRequired,\r\n}\r\n\r\nTimmer.defaultProps = {\r\n    level: 0    \r\n}\r\n\r\nexport default Timmer;","import React from 'react'\r\nimport Colors from '../constant/colors';\r\nimport PropTypes from 'prop-types'\r\n\r\nfunction Lifes({ lifes }) {\r\n\r\n    let hearts = [];\r\n\r\n    if (lifes < 5) {\r\n        for (let i = 0; i < lifes; i++) {\r\n            hearts.push(<i key={i} style={{marginLeft: \"0.1em\"}} className=\"fas fa-heart\"></i>)\r\n        }\r\n    } else {\r\n        hearts.push(<i key={lifes} style={{marginLeft: \"0.1em\"}} className=\"fas fa-heart\"></i>)\r\n    }\r\n\r\n    \r\n    return (\r\n        <span style={{color: Colors.red}}>\r\n            {lifes > 4 && <b>{`${lifes}x`}</b> }\r\n            {hearts}\r\n        </span>\r\n    );\r\n}\r\n\r\nLifes.propTypes = {\r\n    lifes: PropTypes.number.isRequired\r\n}\r\n\r\nexport default Lifes","import React from 'react'\r\nimport Colors from '../constant/colors'\r\n\r\nexport default function Points ({ points }) {\r\n\r\n    return (\r\n        <span>\r\n            <i className=\"fas fa-star\" style={{ color: Colors.yellow }}></i> {points}\r\n        </span>\r\n        )\r\n\r\n}","import React from 'react'\r\nimport { Session, Persistent } from '../utils/storage'\r\nimport * as moment from 'moment'\r\nimport Colors from '../constant/colors';\r\n\r\n\r\n\r\nconst style = {\r\n    container:{\r\n        display: \"flex\",\r\n        justifyContent: \"space-around\",\r\n    },\r\n    el: {\r\n        flex: 1\r\n    },\r\n    title: {\r\n        margin: \"0.6em auto\"\r\n    },\r\n    divider: { border: `0.5px solid ${Colors.midGray}`},\r\n    timeCol: {\r\n        flex: 1,\r\n        padding: \"0.3em 0em\",\r\n        fontSize: \"0.6em\",\r\n        color: Colors.darkGray,\r\n    },\r\n    sectionContainer: { textAlign: \"left\", padding: \"0.15em 0em\" }\r\n}\r\n\r\n\r\n\r\nfunction RowScore ({ player }) {\r\n    return (\r\n        <div style={style.sectionContainer}>\r\n            <h5 style={style.title}>{player.name}</h5>\r\n            <div style={style.container}>\r\n                <small style={style.timeCol}>\r\n                    <i className=\"fas fa-clock\"></i> \r\n                    {\" \" + moment(new Date(player.time)).fromNow()}\r\n                </small>\r\n                <small style={style.el}><i className=\"fas fa-star\" style={{color: Colors.yellow }}></i> {player.points}</small>\r\n            </div>\r\n            <hr style={style.divider} />\r\n        </div>\r\n    )\r\n}\r\n\r\n\r\n\r\n\r\n\r\nexport default function TableScore ({ points }) {\r\n\r\n    const playerName = Session.get(\"onlinePlayer\");\r\n    let scoreTable = JSON.parse(Persistent.get(\"scoreTable\")) || [];\r\n\r\n    scoreTable.push({\r\n        name: playerName,\r\n        points,\r\n        time: Date.now()\r\n    })\r\n\r\n    scoreTable = scoreTable.sort((a, b) => b.points - a.points).slice(0,4)\r\n\r\n    Persistent.set(\"scoreTable\", JSON.stringify(scoreTable))\r\n\r\n    return (\r\n        <div>\r\n            {\r\n                scoreTable.map((player, i) => {\r\n                    return (\r\n                        <RowScore player={player} key={i} />\r\n                    )\r\n                })\r\n            }\r\n        </div>\r\n    )\r\n\r\n}","import React from 'react';\r\nimport Beginning from \"../components/Beginning\";\r\nimport Quiz from \"../components/Quiz\";\r\nimport Done from \"../components/Done\";\r\nimport Timmer from '../components/Timmer';\r\nimport Lifes from '../components/Lifes'\r\nimport Points from '../components/Points'\r\nimport \"./MathQuiz.css\"\r\nimport TableScore from '../components/TableScore';\r\n\r\nclass MathQuiz extends React.Component {\r\n  state = {\r\n    isBeginningDone: false,\r\n    lastPoints: 0\r\n  };\r\n\r\n  retryGame = () => {\r\n    this.setState({ isBeginningDone: false })\r\n    this.props.onRetryGame();\r\n  }\r\n\r\n  completeBeginning = () => {\r\n    this.setState({ isBeginningDone: true });\r\n  };\r\n\r\n  render() {\r\n    return !this.props.isFinished ? (\r\n      <div>\r\n        {!this.state.isBeginningDone ? (\r\n          <Beginning isComplete={this.completeBeginning} />\r\n        ) : (\r\n          <div>\r\n              <div className=\"App-header-bar\">\r\n                <Timmer {...this.props} />\r\n                <Lifes {...this.props} />\r\n                <Points {...this.props} />\r\n              </div>\r\n              <Quiz {...this.props} />\r\n          </div>\r\n        )}\r\n      </div>\r\n    ) : (\r\n      <Done {...this.props} retryGame={this.retryGame} >\r\n        <TableScore {...this.props} />\r\n      </ Done>\r\n    );\r\n  }\r\n}\r\n\r\nexport default MathQuiz;","import React from 'react'\r\n\r\nexport default function Footer() {\r\n    return (\r\n        <footer className=\"App-footer\">\r\n          <small>made with ♥ by <a href=\"https://github.com/ogaston\" rel=\"noopener noreferrer\" target=\"_blank\">Omar Gaston</a></small>\r\n        </footer>\r\n    )\r\n}","import React, { Component } from 'react';\r\nimport { connect } from \"react-redux\"\r\nimport { mapDispatchToProps, mapStateToProps } from './redux/index'\r\nimport Start from './containers/Start';\r\nimport MathQuiz from './containers/MathQuiz';\r\nimport './App.css';\r\nimport Footer from './components/Footer';\r\n\r\nclass App extends Component {\r\n  \r\n\r\n  gameStart = () => {\r\n    this.props.onStartGame();\r\n  }\r\n  \r\n  render() {\r\n    return (\r\n      <div className=\"App\">\r\n        <header className=\"App-header\">\r\n          {\r\n            !this.props.isStarted ? (\r\n              <Start startPressed={this.gameStart} />\r\n            ) : (\r\n              <MathQuiz { ...this.props} gameStart={this.gameStart}/>\r\n            )\r\n          }\r\n        </header>\r\n        <Footer></Footer>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(App);\r\n","import {\r\n  correctAnswer,\r\n  wrongAnswer,\r\n  timeChaged,\r\n  stateGame,\r\n  reStartGame,\r\n  startGame,\r\n  earnLife\r\n} from \"./actions/index\";\r\n\r\nexport const mapStateToProps = state => {\r\n  return {\r\n    points: state.points,\r\n    lifes: state.lifes,\r\n    seconds: state.seconds,\r\n    level: state.level,\r\n    isFinished: state.isFinished,\r\n    isStarted: state.isStarted\r\n  };\r\n};\r\n\r\nexport const mapDispatchToProps = dispatch => {\r\n  return {\r\n    onCorretAnswer: s => dispatch(correctAnswer(s)),\r\n    onWrongAnswer: () => dispatch(wrongAnswer()),\r\n    setTimeChanged: s => dispatch(timeChaged(s)),\r\n    onEndGame: () => dispatch(stateGame(true)),\r\n    onRetryGame: () => dispatch(stateGame(false)),\r\n    onReStartGame: () => dispatch(reStartGame()),\r\n    onStartGame: () => dispatch(startGame()),\r\n    onEarnLife: () => dispatch(earnLife()),\r\n  };\r\n};\r\n","// This optional code is used to register a service worker.\r\n// register() is not called by default.\r\n\r\n// This lets the app load faster on subsequent visits in production, and gives\r\n// it offline capabilities. However, it also means that developers (and users)\r\n// will only see deployed updates on subsequent visits to a page, after all the\r\n// existing tabs open on the page have been closed, since previously cached\r\n// resources are updated in the background.\r\n\r\n// To learn more about the benefits of this model and instructions on how to\r\n// opt-in, read https://bit.ly/CRA-PWA\r\n\r\nconst isLocalhost = Boolean(\r\n  window.location.hostname === 'localhost' ||\r\n    // [::1] is the IPv6 localhost address.\r\n    window.location.hostname === '[::1]' ||\r\n    // 127.0.0.1/8 is considered localhost for IPv4.\r\n    window.location.hostname.match(\r\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\r\n    )\r\n);\r\n\r\nexport function register(config) {\r\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\r\n    // The URL constructor is available in all browsers that support SW.\r\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\r\n    if (publicUrl.origin !== window.location.origin) {\r\n      // Our service worker won't work if PUBLIC_URL is on a different origin\r\n      // from what our page is served on. This might happen if a CDN is used to\r\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\r\n      return;\r\n    }\r\n\r\n    window.addEventListener('load', () => {\r\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\r\n\r\n      if (isLocalhost) {\r\n        // This is running on localhost. Let's check if a service worker still exists or not.\r\n        checkValidServiceWorker(swUrl, config);\r\n\r\n        // Add some additional logging to localhost, pointing developers to the\r\n        // service worker/PWA documentation.\r\n        navigator.serviceWorker.ready.then(() => {\r\n          console.log(\r\n            'This web app is being served cache-first by a service ' +\r\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\r\n          );\r\n        });\r\n      } else {\r\n        // Is not localhost. Just register service worker\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    });\r\n  }\r\n}\r\n\r\nfunction registerValidSW(swUrl, config) {\r\n  navigator.serviceWorker\r\n    .register(swUrl)\r\n    .then(registration => {\r\n      registration.onupdatefound = () => {\r\n        const installingWorker = registration.installing;\r\n        if (installingWorker == null) {\r\n          return;\r\n        }\r\n        installingWorker.onstatechange = () => {\r\n          if (installingWorker.state === 'installed') {\r\n            if (navigator.serviceWorker.controller) {\r\n              // At this point, the updated precached content has been fetched,\r\n              // but the previous service worker will still serve the older\r\n              // content until all client tabs are closed.\r\n              console.log(\r\n                'New content is available and will be used when all ' +\r\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\r\n              );\r\n\r\n              // Execute callback\r\n              if (config && config.onUpdate) {\r\n                config.onUpdate(registration);\r\n              }\r\n            } else {\r\n              // At this point, everything has been precached.\r\n              // It's the perfect time to display a\r\n              // \"Content is cached for offline use.\" message.\r\n              console.log('Content is cached for offline use.');\r\n\r\n              // Execute callback\r\n              if (config && config.onSuccess) {\r\n                config.onSuccess(registration);\r\n              }\r\n            }\r\n          }\r\n        };\r\n      };\r\n    })\r\n    .catch(error => {\r\n      console.error('Error during service worker registration:', error);\r\n    });\r\n}\r\n\r\nfunction checkValidServiceWorker(swUrl, config) {\r\n  // Check if the service worker can be found. If it can't reload the page.\r\n  fetch(swUrl)\r\n    .then(response => {\r\n      // Ensure service worker exists, and that we really are getting a JS file.\r\n      const contentType = response.headers.get('content-type');\r\n      if (\r\n        response.status === 404 ||\r\n        (contentType != null && contentType.indexOf('javascript') === -1)\r\n      ) {\r\n        // No service worker found. Probably a different app. Reload the page.\r\n        navigator.serviceWorker.ready.then(registration => {\r\n          registration.unregister().then(() => {\r\n            window.location.reload();\r\n          });\r\n        });\r\n      } else {\r\n        // Service worker found. Proceed as normal.\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    })\r\n    .catch(() => {\r\n      console.log(\r\n        'No internet connection found. App is running in offline mode.'\r\n      );\r\n    });\r\n}\r\n\r\nexport function unregister() {\r\n  if ('serviceWorker' in navigator) {\r\n    navigator.serviceWorker.ready.then(registration => {\r\n      registration.unregister();\r\n    });\r\n  }\r\n}\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport { Provider } from 'react-redux'\r\nimport store from './redux/store'\r\nimport './index.css';\r\nimport App from './App';\r\nimport * as serviceWorker from './serviceWorker';\r\n\r\nReactDOM.render(\r\n    <Provider store={store} >\r\n        <App />\r\n    </Provider>\r\n    , document.getElementById('root')\r\n);\r\n\r\n// If you want your app to work offline and load faster, you can change\r\n// unregister() to register() below. Note this comes with some pitfalls.\r\n// Learn more about service workers: https://bit.ly/CRA-PWA\r\nserviceWorker.register();\r\n"],"sourceRoot":""}